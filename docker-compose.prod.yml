version: '3.8'

services:
  # Main Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: tpt-gov-app
    restart: unless-stopped
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_URL=https://tpt.gov.local
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=tpt_gov_db
      - DB_USER=tpt_gov_user
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=${JWT_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
    volumes:
      - uploads:/var/www/html/uploads
      - ./logs:/var/www/html/logs
    depends_on:
      - mysql
      - redis
    networks:
      - tpt-gov-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:1.24-alpine
    container_name: tpt-gov-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled:ro
      - ./ssl:/etc/ssl/certs:ro
      - uploads:/var/www/html/uploads:ro
    depends_on:
      - app
    networks:
      - tpt-gov-network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: tpt-gov-mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=tpt_gov_db
      - MYSQL_USER=tpt_gov_user
      - MYSQL_PASSWORD=${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./src/php/migrations:/docker-entrypoint-initdb.d:ro
    networks:
      - tpt-gov-network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7.0-alpine
    container_name: tpt-gov-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - tpt-gov-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Queue Worker (Optional)
  queue-worker:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: tpt-gov-worker
    restart: unless-stopped
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=tpt_gov_db
      - DB_USER=tpt_gov_user
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    command: ["php", "artisan", "queue:work", "--tries=3", "--timeout=90"]
    depends_on:
      - mysql
      - redis
    networks:
      - tpt-gov-network
    deploy:
      replicas: 2

  # Cron Scheduler (Optional)
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: tpt-gov-scheduler
    restart: unless-stopped
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=tpt_gov_db
      - DB_USER=tpt_gov_user
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    command: ["php", "artisan", "schedule:run", "--no-interaction"]
    depends_on:
      - mysql
      - redis
    networks:
      - tpt-gov-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  uploads:
    driver: local

networks:
  tpt-gov-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
