apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tpt-government-platform-ingress
  namespace: tpt-gov
  labels:
    app: tpt-government-platform
    component: ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      # Security headers
      add_header X-Frame-Options "DENY" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self'; object-src 'none'; frame-ancestors 'none'; base-uri 'self'; form-action 'self'; upgrade-insecure-requests;" always;

      # CORS headers for API
      if ($request_uri ~ ^/api/) {
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
        add_header Access-Control-Max-Age "86400" always;
      }

      # Handle preflight requests
      if ($request_method = 'OPTIONS') {
        return 204;
      }
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    acme.cert-manager.io/http01-edit-in-url: "true"
spec:
  tls:
  - hosts:
    - tpt.gov.local
    - api.tpt.gov.local
    - admin.tpt.gov.local
    secretName: tpt-gov-tls
  rules:
  - host: tpt.gov.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: tpt-government-platform-service
            port:
              number: 80
      - path: /api/v1
        pathType: Prefix
        backend:
          service:
            name: tpt-government-platform-service
            port:
              number: 80
      - path: /health
        pathType: Exact
        backend:
          service:
            name: tpt-government-platform-service
            port:
              number: 80
      - path: /metrics
        pathType: Exact
        backend:
          service:
            name: tpt-government-platform-service
            port:
              number: 9090
  - host: api.tpt.gov.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: tpt-government-platform-service
            port:
              number: 80
  - host: admin.tpt.gov.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: tpt-government-platform-service
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tpt-government-platform-internal-ingress
  namespace: tpt-gov
  labels:
    app: tpt-government-platform
    component: ingress
    type: internal
  annotations:
    kubernetes.io/ingress.class: "nginx-internal"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
spec:
  rules:
  - host: internal.tpt.gov.local
    http:
      paths:
      - path: /admin
        pathType: Prefix
        backend:
          service:
            name: tpt-government-platform-service
            port:
              number: 80
      - path: /api/internal
        pathType: Prefix
        backend:
          service:
            name: tpt-government-platform-service
            port:
              number: 80
