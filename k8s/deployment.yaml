apiVersion: apps/v1
kind: Deployment
metadata:
  name: tpt-government-platform
  namespace: tpt-gov
  labels:
    app: tpt-government-platform
    component: web
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: tpt-government-platform
      component: web
  template:
    metadata:
      labels:
        app: tpt-government-platform
        component: web
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: tpt-gov-service-account
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        runAsNonRoot: true
      containers:
      - name: tpt-gov-web
        image: tpt-gov-platform:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        env:
        - name: APP_ENV
          value: "production"
        - name: APP_DEBUG
          value: "false"
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: tpt-gov-secrets
              key: db_host
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: tpt-gov-secrets
              key: db_port
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: tpt-gov-secrets
              key: db_name
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: tpt-gov-secrets
              key: db_user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: tpt-gov-secrets
              key: db_password
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: tpt-gov-config
              key: redis_host
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: tpt-gov-config
              key: redis_port
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: tpt-gov-secrets
              key: jwt_secret
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: tpt-gov-secrets
              key: encryption_key
        - name: OAUTH_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: tpt-gov-secrets
              key: oauth_client_id
        - name: OAUTH_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: tpt-gov-secrets
              key: oauth_client_secret
        - name: SMTP_HOST
          valueFrom:
            configMapKeyRef:
              name: tpt-gov-config
              key: smtp_host
        - name: SMTP_PORT
          valueFrom:
            configMapKeyRef:
              name: tpt-gov-config
              key: smtp_port
        - name: SMTP_USER
          valueFrom:
            secretKeyRef:
              name: tpt-gov-secrets
              key: smtp_user
        - name: SMTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: tpt-gov-secrets
              key: smtp_password
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /ready
            port: 80
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
          successThreshold: 1
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
        - name: cache-volume
          mountPath: /var/www/html/cache
        - name: logs-volume
          mountPath: /var/www/html/logs
        - name: uploads-volume
          mountPath: /var/www/html/uploads
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: cache-volume
        emptyDir: {}
      - name: logs-volume
        emptyDir: {}
      - name: uploads-volume
        persistentVolumeClaim:
          claimName: tpt-gov-uploads-pvc
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - tpt-government-platform
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "node-type"
        operator: "Equal"
        value: "web"
        effect: "NoSchedule"
      nodeSelector:
        node-type: web
