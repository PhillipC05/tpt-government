apiVersion: v1
kind: Secret
metadata:
  name: tpt-gov-secrets
  namespace: tpt-gov
  labels:
    app: tpt-government-platform
    component: secrets
type: Opaque
data:
  # Database credentials (base64 encoded)
  db_host: bXlzcWwtdnAucmVzZWwubG9jYWw=  # mysql-vp.resel.local
  db_port: MzMwNg==  # 3306
  db_name: dHB0X2dvdl9kYg==  # tpt_gov_db
  db_user: dHB0X2dvdl91c2Vy  # tpt_gov_user
  db_password: <BASE64_ENCODED_DB_PASSWORD>

  # JWT and encryption keys
  jwt_secret: <BASE64_ENCODED_JWT_SECRET>
  encryption_key: <BASE64_ENCODED_ENCRYPTION_KEY>

  # OAuth credentials
  oauth_client_id: <BASE64_ENCODED_OAUTH_CLIENT_ID>
  oauth_client_secret: <BASE64_ENCODED_OAUTH_CLIENT_SECRET>

  # Email credentials
  smtp_user: <BASE64_ENCODED_SMTP_USER>
  smtp_password: <BASE64_ENCODED_SMTP_PASSWORD>

  # AI service API keys
  openai_api_key: <BASE64_ENCODED_OPENAI_KEY>
  anthropic_api_key: <BASE64_ENCODED_CLAUDE_KEY>
  google_gemini_key: <BASE64_ENCODED_GEMINI_KEY>
  openrouter_key: <BASE64_ENCODED_OPENROUTER_KEY>

  # AWS credentials (if using S3)
  aws_access_key_id: <BASE64_ENCODED_AWS_ACCESS_KEY>
  aws_secret_access_key: <BASE64_ENCODED_AWS_SECRET_KEY>

  # Redis password (if required)
  redis_password: <BASE64_ENCODED_REDIS_PASSWORD>

  # Pusher credentials (for real-time features)
  pusher_app_id: <BASE64_ENCODED_PUSHER_APP_ID>
  pusher_app_key: <BASE64_ENCODED_PUSHER_APP_KEY>
  pusher_app_secret: <BASE64_ENCODED_PUSHER_APP_SECRET>

  # Webhook signing secrets
  webhook_secret: <BASE64_ENCODED_WEBHOOK_SECRET>

  # ERP integration secrets
  sap_username: <BASE64_ENCODED_SAP_USER>
  sap_password: <BASE64_ENCODED_SAP_PASSWORD>
  oracle_username: <BASE64_ENCODED_ORACLE_USER>
  oracle_password: <BASE64_ENCODED_ORACLE_PASSWORD>
  dynamics_key: <BASE64_ENCODED_DYNAMICS_KEY>
  workday_token: <BASE64_ENCODED_WORKDAY_TOKEN>
  peoplesoft_user: <BASE64_ENCODED_PEOPLESOFT_USER>
  peoplesoft_password: <BASE64_ENCODED_PEOPLESOFT_PASSWORD>

  # Government API keys
  gov_api_key: <BASE64_ENCODED_GOV_API_KEY>
  census_api_key: <BASE64_ENCODED_CENSUS_API_KEY>
  treasury_api_key: <BASE64_ENCODED_TREASURY_API_KEY>

  # SSL/TLS certificates (if not using cert-manager)
  tls_key: <BASE64_ENCODED_TLS_PRIVATE_KEY>
  tls_cert: <BASE64_ENCODED_TLS_CERTIFICATE>

---
apiVersion: v1
kind: Secret
metadata:
  name: tpt-gov-registry-secret
  namespace: tpt-gov
  labels:
    app: tpt-government-platform
    component: registry
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: <BASE64_ENCODED_DOCKER_CONFIG>

---
apiVersion: v1
kind: Secret
metadata:
  name: tpt-gov-tls
  namespace: tpt-gov
  labels:
    app: tpt-government-platform
    component: tls
type: kubernetes.io/tls
data:
  tls.crt: <BASE64_ENCODED_TLS_CERTIFICATE>
  tls.key: <BASE64_ENCODED_TLS_PRIVATE_KEY>

---
# External secret for cloud-managed secrets (AWS Secrets Manager, etc.)
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: tpt-gov-external-secrets
  namespace: tpt-gov
spec:
  refreshInterval: 15s
  secretStoreRef:
    name: aws-secretsmanager
    kind: SecretStore
  target:
    name: tpt-gov-external-secrets
    creationPolicy: Owner
  data:
  - secretKey: db_password
    remoteRef:
      key: prod/tpt-gov/database
      property: password
  - secretKey: jwt_secret
    remoteRef:
      key: prod/tpt-gov/security
      property: jwt_secret
  - secretKey: encryption_key
    remoteRef:
      key: prod/tpt-gov/security
      property: encryption_key
  - secretKey: oauth_client_secret
    remoteRef:
      key: prod/tpt-gov/oauth
      property: client_secret
  - secretKey: smtp_password
    remoteRef:
      key: prod/tpt-gov/email
      property: smtp_password
  - secretKey: openai_api_key
    remoteRef:
      key: prod/tpt-gov/ai
      property: openai_key
  - secretKey: aws_secret_access_key
    remoteRef:
      key: prod/tpt-gov/aws
      property: secret_access_key
